name: Openwrt-AutoBuild

on:
#  release:
#    types: [published]
  push:
    branches:
      - master
    paths:
      - 'start'
  schedule:
    - cron: 0 12 * * *
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [ipq40xx,x64,mt7621] 
    
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Set Date
      run: |
         date=$(date +%Y-%m-%d)
         echo "::set-env name=DATE::$date"
         
         
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc
        
    - name: Clone source code
      run: git clone $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |        
        echo "Apply patches"
        if [ -n "$(ls -A "user/default/patches" 2>/dev/null)" ]; then
        (
          find "user/default/patches" -type f -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d 'openwrt' -p0 --forward"
        )
        fi

        if [ -n "$(ls -A "user/${{matrix.target}}/patches" 2>/dev/null)" ]; then
        (
          find "user/${{matrix.target}}/patches" -type f -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d 'openwrt' -p0 --forward"
        )
        fi

         echo "Apply files..."
         if [ -n "$(ls -A "user/default/files" 2>/dev/null)" ]; then
         cp -r -f user/default/files/* openwrt/package/base-files/files/
         fi
         if [ -n "$(ls -A "user/${{matrix.target}}/files" 2>/dev/null)" ]; then
         cp -r -f user/${{matrix.target}}/files/* openwrt/package/base-files/files/
         fi
        
        echo "Apply custom.sh"
        if [ -f "user/default/custom.sh" ]; then
        (
           cd openwrt
           /bin/bash "../user/default/custom.sh"
         )
         fi
        
        if [ -f "user/${{matrix.target}}/custom.sh" ]; then
        (
           cd openwrt
           /bin/bash "../user/${{matrix.target}}/custom.sh"
         )
         fi



    - name: Download package
      id: package
      run: |
        cd openwrt
        mv ../user/${{matrix.target}}/config.diff .config
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "3 thread compile"
        make -j3 || make -j1 V=s

    - name: Upload packages directory
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_packages_${{matrix.target}}
        path: openwrt/bin/packages
        
    - name: Upload targets directory
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_targets_${{matrix.target}}
        path: openwrt/bin/targets
        
    - name:  Push packages
      env:
       SUPER_TOKEN: ${{ secrets.SUPER_TOKEN }}
      run: |
        cd openwrt/bin/packages/
        git init
        git config user.name "bot"
        git config user.email "bot@github.com"
        git add .
        git commit -m "$DATE"
        git push --force --quiet https://$SUPER_TOKEN@github.com/hyird/Openwrt-AutoBuild.git  HEAD:${{matrix.target}}_packages
        rm -rf .git 
    - name:  Push targets
      env:
       SUPER_TOKEN: ${{ secrets.SUPER_TOKEN }}
      run: |
        cd openwrt/bin/targets/
        git init
        git config user.name "bot"
        git config user.email "bot@github.com"
        git add .
        git commit -m "$DATE"
        git push --force --quiet https://$SUPER_TOKEN@github.com/hyird/Openwrt-AutoBuild.git  HEAD:${{matrix.target}}_targets
        rm -rf .git


